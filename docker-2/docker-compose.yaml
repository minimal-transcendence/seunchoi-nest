version: "3"

services:
  postgresql:
    build: ./src/postgresql
    container_name: postgresql
    image: postgresql
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgresql_volume:/var/lib/postgresql/data

  backend:
    build: ./src/backend
    container_name: backend
    image: backend
    depends_on:
      postgresql:
        condition: service_healthy
    restart: always
    ports:
      - '3000:3000'
      - '5555:5555'
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}/${POSTGRES_DB}?${POSTGRES_SCHEMA}
      - JWT_ACCESS_TOKEN_SECRET=${JWT_ACCESS_TOKEN_SECRET}
      - JWT_ACCESS_EXPIRATION_TIME=${JWT_ACCESS_EXPIRATION_TIME}
      - JWT_REFRESH_TOKEN_SECRET=${JWT_REFRESH_TOKEN_SECRET}
      - JWT_REFRESH_EXPIRATION_TIME=${JWT_REFRESH_EXPIRATION_TIME}

  frontend:
    build: ./src/frontend
    container_name: frontend
    image: frontend
    depends_on:
      - backend
    restart: always
    ports:
      - '80:80'

    # for dev
    # volumes:
    #   - /Users/seunchoi/app-docker/default.conf:/etc/nginx/conf.d/default.conf:ro
    # command: [nginx-debug, '-g', 'daemon off;']

volumes:
  postgresql_volume:
    name: postgresql_volume
    driver_opts:
      type: none
      device: /Users/seunchoi/app-docker/pgdata
      o: bind